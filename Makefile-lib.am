# Makefile for C source code
#
# Copyright (C) 2015 Colin Walters <walters@verbum.org>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.

include Makefile-lib-defines.am

lib_LTLIBRARIES += librpmostree-1.la

librpmostreeincludedir = $(includedir)/rpm-ostree-1
librpmostreeinclude_HEADERS = $(librpmostree_public_headers)

rpmostree_shlib_sources = \
	src/lib/rpmostree.c \
	src/lib/rpmostree-db.c \
	src/lib/rpmostree-package.c \
	$(NULL)

# Build as both a shared library and executable
# https://unix.stackexchange.com/questions/223385/why-and-how-are-some-shared-libraries-runnable-as-though-they-are-executables
librpmostree_1_la_SOURCES = $(rpmostree_shlib_sources) $(rpmostree_executable_sources) $(rpmostree_daemon_sources)
nodist_librpmostree_1_la_SOURCES = $(nodist_rpmostree_daemon_sources)

rpmostree_common_cflags = \
	-I$(srcdir)/src/lib -I$(srcdir)/src/libpriv -I$(libglnx_srcpath) \
 	-I$(srcdir)/src/daemon -I$(srcdir)/src/app \
	-fvisibility=hidden '-D_RPMOSTREE_EXTERN=__attribute((visibility("default"))) extern' \
	-DG_LOG_DOMAIN=\"rpm-ostreed\" \
	-DPKGLIBDIR=\"$(pkglibdir)\" $(PKGDEP_RPMOSTREE_CFLAGS)
librpmostree_1_la_CFLAGS = $(AM_CFLAGS) $(rpmostree_common_cflags)
librpmostree_1_la_CXXFLAGS = $(AM_CXXFLAGS) $(rpmostree_common_cflags)
librpmostree_1_la_LDFLAGS = $(AM_LDFLAGS) -version-number 1:0:0 -Bsymbolic-functions -e __rpmostree_shlibpriv_main
librpmostree_1_la_LIBADD = $(PKGDEP_RPMOSTREE_LIBS) $(CAP_LIBS) librpmostreepriv.la $(librpmostree_rust_path)

# The g-ir-scanner creates a stub executable (to help introspect type information) which
# links to our stuff. We want to make sure it picks up our fresh libdnf and not a possibly
# stale one from a previously installed rpm-ostree's bundled libdnf.
INTROSPECTION_SCANNER_ENV = env LD_LIBRARY_PATH=$(top_builddir)/libdnf-build/libdnf

# XXX: work around clang being passed -fstack-clash-protection which it doesn't understand
# https://github.com/projectatomic/rpm-ostree/pull/1787#issuecomment-473971585
INTROSPECTION_SCANNER_ENV += CC=gcc

if BUILDOPT_INTROSPECTION
RpmOstree-1.0.gir: librpmostree-1.la Makefile
RpmOstree_1_0_gir_EXPORT_PACKAGES = rpm-ostree-1
RpmOstree_1_0_gir_INCLUDES = OSTree-1.0 Gio-2.0
RpmOstree_1_0_gir_CFLAGS = $(librpmostree_1_la_CFLAGS)
RpmOstree_1_0_gir_LIBS = librpmostree-1.la
RpmOstree_1_0_gir_SCANNERFLAGS = --warn-all --identifier-prefix=RpmOstree --symbol-prefix=rpm_ostree
RpmOstree_1_0_gir_FILES = $(librpmostreeinclude_HEADERS) $(filter-out %-private.h,$(rpmostree_shlib_sources))
INTROSPECTION_GIRS += RpmOstree-1.0.gir
gir_DATA += RpmOstree-1.0.gir
typelib_DATA += RpmOstree-1.0.typelib

CLEANFILES += $(gir_DATA) $(typelib_DATA)
endif

pkgconfig_DATA += src/lib/rpm-ostree-1.pc

